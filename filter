#!/usr/bin/env node
var fs=require("node:fs/promises")
var es=require("event-stream")
var cp=require("child_process")
var path=require("path")
var vm=require("vm")
var net=require("net")
var qs=require("querystring")
var stream=require("stream")
var getArgs=()=>process.argv.slice(2)
var compileFunction=(s)=>vm.compileFunction(`var str=[...arguments].join(); var fn=${s}; return fn(str);`)
var mapStream=function mapStream(fn) { return es.pipe(es.split(),es.map((data,cb)=>cb(null,fn(data)+"\n"))); };
var filter=function(fn) { return es.pipe(es.split(),es.map((data,cb)=>fn(data)?cb(null,data+"\n"):cb(null))); };
//var $ = require('ea-lib')

//run
/* 
USAGE: cat file | filter '(s)=>["bad","ananas"].some(ext=>String(s).includes(ext)))' 

filters each line using a predicate function (a function returning a boolean value: true/false) 
in this case any line that contains the keywords "bad" or "ananas"
*/


var predicate=compileFunction(getArgs().join()||"(s)=>String(s).trim().length>0")

process
	.openStdin()
	.pipe(filter(predicate))
	.pipe(process.stdout)
